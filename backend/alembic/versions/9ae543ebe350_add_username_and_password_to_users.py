"""add username and password to users

Revision ID: 9ae543ebe350
Revises: 
Create Date: 2025-06-09 12:31:11.817721

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '9ae543ebe350'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('messages', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.add_column('users', sa.Column('username', sa.String(length=50), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(length=100), nullable=False))
    op.alter_column('users', 'nome',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.create_unique_constraint(None, 'users', ['username'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'nome',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.drop_column('users', 'password')
    op.drop_column('users', 'username')
    op.alter_column('messages', 'user_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    # ### end Alembic commands ###
